{"name":"expo-contacts","kind":1,"kindString":"Project","originalName":"","children":[{"name":"CalendarFormats","kind":8,"kindString":"Enumeration","comment":{"shortText":"This format denotes the common calendar format used to specify how a date is calculated in `nonGregorianBirthday` fields."},"children":[{"name":"Buddhist","kind":16,"kindString":"Enumeration member","comment":{"tags":[{"tag":"platform","text":"ios\n"}]},"defaultValue":"\"buddhist\""},{"name":"Chinese","kind":16,"kindString":"Enumeration member","comment":{"tags":[{"tag":"platform","text":"ios\n"}]},"defaultValue":"\"chinese\""},{"name":"Coptic","kind":16,"kindString":"Enumeration member","comment":{"tags":[{"tag":"platform","text":"ios\n"}]},"defaultValue":"\"coptic\""},{"name":"EthiopicAmeteAlem","kind":16,"kindString":"Enumeration member","comment":{"tags":[{"tag":"platform","text":"ios\n"}]},"defaultValue":"\"ethiopicAmeteAlem\""},{"name":"EthiopicAmeteMihret","kind":16,"kindString":"Enumeration member","comment":{"tags":[{"tag":"platform","text":"ios\n"}]},"defaultValue":"\"ethiopicAmeteMihret\""},{"name":"Gregorian","kind":16,"kindString":"Enumeration member","defaultValue":"\"gregorian\""},{"name":"Hebrew","kind":16,"kindString":"Enumeration member","comment":{"tags":[{"tag":"platform","text":"ios\n"}]},"defaultValue":"\"hebrew\""},{"name":"ISO8601","kind":16,"kindString":"Enumeration member","comment":{"tags":[{"tag":"platform","text":"ios\n"}]},"defaultValue":"\"iso8601\""},{"name":"Indian","kind":16,"kindString":"Enumeration member","comment":{"tags":[{"tag":"platform","text":"ios\n"}]},"defaultValue":"\"indian\""},{"name":"Islamic","kind":16,"kindString":"Enumeration member","comment":{"tags":[{"tag":"platform","text":"ios\n"}]},"defaultValue":"\"islamic\""},{"name":"IslamicCivil","kind":16,"kindString":"Enumeration member","comment":{"tags":[{"tag":"platform","text":"ios\n"}]},"defaultValue":"\"islamicCivil\""},{"name":"IslamicTabular","kind":16,"kindString":"Enumeration member","comment":{"tags":[{"tag":"platform","text":"ios\n"}]},"defaultValue":"\"islamicTabular\""},{"name":"IslamicUmmAlQura","kind":16,"kindString":"Enumeration member","comment":{"tags":[{"tag":"platform","text":"ios\n"}]},"defaultValue":"\"islamicUmmAlQura\""},{"name":"Japanese","kind":16,"kindString":"Enumeration member","comment":{"tags":[{"tag":"platform","text":"ios\n"}]},"defaultValue":"\"japanese\""},{"name":"Persian","kind":16,"kindString":"Enumeration member","comment":{"tags":[{"tag":"platform","text":"ios\n"}]},"defaultValue":"\"persian\""},{"name":"RepublicOfChina","kind":16,"kindString":"Enumeration member","comment":{"tags":[{"tag":"platform","text":"ios\n"}]},"defaultValue":"\"republicOfChina\""}]},{"name":"ContactTypes","kind":8,"kindString":"Enumeration","children":[{"name":"Company","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Contact is group or company."},"defaultValue":"\"company\""},{"name":"Person","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Contact is a human."},"defaultValue":"\"person\""}]},{"name":"ContainerTypes","kind":8,"kindString":"Enumeration","comment":{"tags":[{"tag":"platform","text":"ios\n"}]},"children":[{"name":"CardDAV","kind":16,"kindString":"Enumeration member","comment":{"shortText":"With cardDAV protocol used for sharing."},"defaultValue":"\"cardDAV\""},{"name":"Exchange","kind":16,"kindString":"Enumeration member","comment":{"shortText":"In association with email server."},"defaultValue":"\"exchange\""},{"name":"Local","kind":16,"kindString":"Enumeration member","comment":{"shortText":"A local non-iCloud container."},"defaultValue":"\"local\""},{"name":"Unassigned","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Unknown container."},"defaultValue":"\"unassigned\""}]},{"name":"Fields","kind":8,"kindString":"Enumeration","comment":{"shortText":"Possible fields to retrieve for a contact."},"children":[{"name":"Addresses","kind":16,"kindString":"Enumeration member","defaultValue":"\"addresses\""},{"name":"Birthday","kind":16,"kindString":"Enumeration member","defaultValue":"\"birthday\""},{"name":"Company","kind":16,"kindString":"Enumeration member","defaultValue":"\"company\""},{"name":"ContactType","kind":16,"kindString":"Enumeration member","defaultValue":"\"contactType\""},{"name":"Dates","kind":16,"kindString":"Enumeration member","defaultValue":"\"dates\""},{"name":"Department","kind":16,"kindString":"Enumeration member","defaultValue":"\"department\""},{"name":"Emails","kind":16,"kindString":"Enumeration member","defaultValue":"\"emails\""},{"name":"ExtraNames","kind":16,"kindString":"Enumeration member","defaultValue":"\"extraNames\""},{"name":"FirstName","kind":16,"kindString":"Enumeration member","defaultValue":"\"firstName\""},{"name":"ID","kind":16,"kindString":"Enumeration member","defaultValue":"\"id\""},{"name":"Image","kind":16,"kindString":"Enumeration member","defaultValue":"\"image\""},{"name":"ImageAvailable","kind":16,"kindString":"Enumeration member","defaultValue":"\"imageAvailable\""},{"name":"InstantMessageAddresses","kind":16,"kindString":"Enumeration member","defaultValue":"\"instantMessageAddresses\""},{"name":"JobTitle","kind":16,"kindString":"Enumeration member","defaultValue":"\"jobTitle\""},{"name":"LastName","kind":16,"kindString":"Enumeration member","defaultValue":"\"lastName\""},{"name":"MaidenName","kind":16,"kindString":"Enumeration member","defaultValue":"\"maidenName\""},{"name":"MiddleName","kind":16,"kindString":"Enumeration member","defaultValue":"\"middleName\""},{"name":"Name","kind":16,"kindString":"Enumeration member","defaultValue":"\"name\""},{"name":"NamePrefix","kind":16,"kindString":"Enumeration member","defaultValue":"\"namePrefix\""},{"name":"NameSuffix","kind":16,"kindString":"Enumeration member","defaultValue":"\"nameSuffix\""},{"name":"Nickname","kind":16,"kindString":"Enumeration member","defaultValue":"\"nickname\""},{"name":"NonGregorianBirthday","kind":16,"kindString":"Enumeration member","comment":{"tags":[{"tag":"platform","text":"ios\n"}]},"defaultValue":"\"nonGregorianBirthday\""},{"name":"Note","kind":16,"kindString":"Enumeration member","defaultValue":"\"note\""},{"name":"PhoneNumbers","kind":16,"kindString":"Enumeration member","defaultValue":"\"phoneNumbers\""},{"name":"PhoneticFirstName","kind":16,"kindString":"Enumeration member","defaultValue":"\"phoneticFirstName\""},{"name":"PhoneticLastName","kind":16,"kindString":"Enumeration member","defaultValue":"\"phoneticLastName\""},{"name":"PhoneticMiddleName","kind":16,"kindString":"Enumeration member","defaultValue":"\"phoneticMiddleName\""},{"name":"RawImage","kind":16,"kindString":"Enumeration member","defaultValue":"\"rawImage\""},{"name":"Relationships","kind":16,"kindString":"Enumeration member","defaultValue":"\"relationships\""},{"name":"SocialProfiles","kind":16,"kindString":"Enumeration member","comment":{"tags":[{"tag":"platform","text":"ios\n"}]},"defaultValue":"\"socialProfiles\""},{"name":"UrlAddresses","kind":16,"kindString":"Enumeration member","defaultValue":"\"urlAddresses\""}]},{"name":"PermissionStatus","kind":8,"kindString":"Enumeration","children":[{"name":"DENIED","kind":16,"kindString":"Enumeration member","comment":{"shortText":"User has denied the permission."},"defaultValue":"\"denied\""},{"name":"GRANTED","kind":16,"kindString":"Enumeration member","comment":{"shortText":"User has granted the permission."},"defaultValue":"\"granted\""},{"name":"UNDETERMINED","kind":16,"kindString":"Enumeration member","comment":{"shortText":"User hasn't granted or denied the permission yet."},"defaultValue":"\"undetermined\""}]},{"name":"SortTypes","kind":8,"kindString":"Enumeration","children":[{"name":"FirstName","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Sort by first name in ascending order."},"defaultValue":"\"firstName\""},{"name":"LastName","kind":16,"kindString":"Enumeration member","comment":{"shortText":"Sort by last name in ascending order."},"defaultValue":"\"lastName\""},{"name":"None","kind":16,"kindString":"Enumeration member","comment":{"shortText":"No sorting should be applied."},"defaultValue":"\"none\""},{"name":"UserDefault","kind":16,"kindString":"Enumeration member","comment":{"shortText":"The user default method of sorting.","tags":[{"tag":"platform","text":"android\n"}]},"defaultValue":"\"userDefault\""}]},{"name":"PermissionResponse","kind":256,"kindString":"Interface","comment":{"shortText":"An object obtained by permissions get and request functions."},"children":[{"name":"canAskAgain","kind":1024,"kindString":"Property","comment":{"shortText":"Indicates if user can be asked again for specific permission.\nIf not, one should be directed to the Settings app\nin order to enable/disable the permission."},"type":{"type":"intrinsic","name":"boolean"}},{"name":"expires","kind":1024,"kindString":"Property","comment":{"shortText":"Determines time when the permission expires."},"type":{"type":"reference","name":"PermissionExpiration"}},{"name":"granted","kind":1024,"kindString":"Property","comment":{"shortText":"A convenience boolean that indicates if the permission is granted."},"type":{"type":"intrinsic","name":"boolean"}},{"name":"status","kind":1024,"kindString":"Property","comment":{"shortText":"Determines the status of the permission."},"type":{"type":"reference","name":"PermissionStatus"}}]},{"name":"Address","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"city","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"City name."},"type":{"type":"intrinsic","name":"string"}},{"name":"country","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Country name"},"type":{"type":"intrinsic","name":"string"}},{"name":"id","kind":1024,"kindString":"Property","comment":{"shortText":"Unique ID."},"type":{"type":"intrinsic","name":"string"}},{"name":"isoCountryCode","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"[Standard country code](https://www.iso.org/iso-3166-country-codes.html)."},"type":{"type":"intrinsic","name":"string"}},{"name":"label","kind":1024,"kindString":"Property","comment":{"shortText":"Localized display name."},"type":{"type":"intrinsic","name":"string"}},{"name":"neighborhood","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Neighborhood name."},"type":{"type":"intrinsic","name":"string"}},{"name":"poBox","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"P.O. Box."},"type":{"type":"intrinsic","name":"string"}},{"name":"postalCode","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Local post code."},"type":{"type":"intrinsic","name":"string"}},{"name":"region","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Region or state name."},"type":{"type":"intrinsic","name":"string"}},{"name":"street","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Street name."},"type":{"type":"intrinsic","name":"string"}}]}}},{"name":"CalendarFormatType","kind":4194304,"kindString":"Type alias","type":{"type":"union","types":[{"type":"reference","name":"CalendarFormats"},{"type":"template-literal","head":"","tail":[[{"type":"reference","name":"CalendarFormats"},""]]}]}},{"name":"Contact","kind":4194304,"kindString":"Type alias","comment":{"shortText":"A set of fields that define information about a single contact entity."},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"addresses","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Locations."},"type":{"type":"array","elementType":{"type":"reference","name":"Address"}}},{"name":"birthday","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Birthday information in Gregorian format."},"type":{"type":"reference","name":"Date"}},{"name":"company","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Organization the entity belongs to."},"type":{"type":"intrinsic","name":"string"}},{"name":"contactType","kind":1024,"kindString":"Property","comment":{"shortText":"Denoting a person or company."},"type":{"type":"reference","name":"ContactType"}},{"name":"dates","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"A labeled list of other relevant user dates in Gregorian format."},"type":{"type":"array","elementType":{"type":"reference","name":"Date"}}},{"name":"department","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Job department."},"type":{"type":"intrinsic","name":"string"}},{"name":"emails","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Email addresses."},"type":{"type":"array","elementType":{"type":"reference","name":"Email"}}},{"name":"firstName","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Given name."},"type":{"type":"intrinsic","name":"string"}},{"name":"id","kind":1024,"kindString":"Property","comment":{"shortText":"Immutable identifier used for querying and indexing."},"type":{"type":"intrinsic","name":"string"}},{"name":"image","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Thumbnail image. On iOS it size is set to 320×320px, on Android it may vary."},"type":{"type":"reference","name":"Image"}},{"name":"imageAvailable","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Used for efficient retrieval of images."},"type":{"type":"intrinsic","name":"boolean"}},{"name":"instantMessageAddresses","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Instant messaging connections."},"type":{"type":"array","elementType":{"type":"reference","name":"InstantMessageAddress"}}},{"name":"jobTitle","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Job description."},"type":{"type":"intrinsic","name":"string"}},{"name":"lastName","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Last name."},"type":{"type":"intrinsic","name":"string"}},{"name":"maidenName","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Maiden name."},"type":{"type":"intrinsic","name":"string"}},{"name":"middleName","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Middle name"},"type":{"type":"intrinsic","name":"string"}},{"name":"name","kind":1024,"kindString":"Property","comment":{"shortText":"Full name with proper format."},"type":{"type":"intrinsic","name":"string"}},{"name":"namePrefix","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Dr. Mr. Mrs. ect…"},"type":{"type":"intrinsic","name":"string"}},{"name":"nameSuffix","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Jr. Sr. ect…"},"type":{"type":"intrinsic","name":"string"}},{"name":"nickname","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"An alias to the proper name."},"type":{"type":"intrinsic","name":"string"}},{"name":"nonGregorianBirthday","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Birthday that doesn't conform to the Gregorian calendar format, interpreted based on the [calendar `format`](#date) setting.","tags":[{"tag":"platform","text":"ios\n"}]},"type":{"type":"reference","name":"Date"}},{"name":"note","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Additional information.\n> On iOS 13+, the `note` field [requires your app to request additional entitlements](https://developer.apple.com/documentation/bundleresources/entitlements/com_apple_developer_contacts_notes).\n> The Expo Go app does not contain those entitlements, so in order to test this feature you will need to [request the entitlement from Apple](https://developer.apple.com/contact/request/contact-note-field),\n> set the [`ios.accessesContactNotes`](./config/app.mdx#accessescontactnotes) field in app.json to `true`, and [create your development build](/development/create-development-builds)."},"type":{"type":"intrinsic","name":"string"}},{"name":"phoneNumbers","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Phone numbers."},"type":{"type":"array","elementType":{"type":"reference","name":"PhoneNumber"}}},{"name":"phoneticFirstName","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Pronunciation of the first name."},"type":{"type":"intrinsic","name":"string"}},{"name":"phoneticLastName","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Pronunciation of the last name."},"type":{"type":"intrinsic","name":"string"}},{"name":"phoneticMiddleName","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Pronunciation of the middle name."},"type":{"type":"intrinsic","name":"string"}},{"name":"rawImage","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Raw image without cropping, usually large."},"type":{"type":"reference","name":"Image"}},{"name":"relationships","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Names of other relevant user connections."},"type":{"type":"array","elementType":{"type":"reference","name":"Relationship"}}},{"name":"socialProfiles","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Social networks.","tags":[{"tag":"platform","text":"ios\n"}]},"type":{"type":"array","elementType":{"type":"reference","name":"SocialProfile"}}},{"name":"urlAddresses","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Associated web URLs."},"type":{"type":"array","elementType":{"type":"reference","name":"UrlAddress"}}}]}}},{"name":"ContactQuery","kind":4194304,"kindString":"Type alias","comment":{"shortText":"Used to query contacts from the user's device."},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"containerId","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Get all contacts that belong to the container matching this ID.","tags":[{"tag":"platform","text":"ios\n"}]},"type":{"type":"intrinsic","name":"string"}},{"name":"fields","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"If specified, the defined fields will be returned. If skipped, all fields will be returned."},"type":{"type":"array","elementType":{"type":"reference","name":"FieldType"}}},{"name":"groupId","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Get all contacts that belong to the group matching this ID.","tags":[{"tag":"platform","text":"ios\n"}]},"type":{"type":"intrinsic","name":"string"}},{"name":"id","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Get contacts with a matching ID or array of IDs."},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"array","elementType":{"type":"intrinsic","name":"string"}}]}},{"name":"name","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Get all contacts whose name contains the provided string (not case-sensitive)."},"type":{"type":"intrinsic","name":"string"}},{"name":"pageOffset","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"The number of contacts to skip before gathering contacts."},"type":{"type":"intrinsic","name":"number"}},{"name":"pageSize","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"The max number of contacts to return. If skipped or set to `0` all contacts will be returned."},"type":{"type":"intrinsic","name":"number"}},{"name":"rawContacts","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Prevent unification of contacts when gathering.","tags":[{"tag":"default","text":"false"},{"tag":"platform","text":"ios\n"}]},"type":{"type":"intrinsic","name":"boolean"}},{"name":"sort","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Sort method used when gathering contacts."},"type":{"type":"reference","name":"ContactSort"}}]}}},{"name":"ContactResponse","kind":4194304,"kindString":"Type alias","comment":{"shortText":"The return value for queried contact operations like `getContactsAsync`."},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"data","kind":1024,"kindString":"Property","comment":{"shortText":"An array of contacts that match a particular query."},"type":{"type":"array","elementType":{"type":"reference","name":"Contact"}}},{"name":"hasNextPage","kind":1024,"kindString":"Property","comment":{"shortText":"This will be `true` if there are more contacts to retrieve beyond what is returned."},"type":{"type":"intrinsic","name":"boolean"}},{"name":"hasPreviousPage","kind":1024,"kindString":"Property","comment":{"shortText":"This will be `true if there are previous contacts that weren't retrieved due to `pageOffset` limit."},"type":{"type":"intrinsic","name":"boolean"}}]}}},{"name":"ContactSort","kind":4194304,"kindString":"Type alias","type":{"type":"template-literal","head":"","tail":[[{"type":"reference","name":"SortTypes"},""]]}},{"name":"ContactType","kind":4194304,"kindString":"Type alias","type":{"type":"union","types":[{"type":"reference","name":"ContactTypes"},{"type":"template-literal","head":"","tail":[[{"type":"reference","name":"ContactTypes"},""]]}]}},{"name":"Container","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"id","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"}},{"name":"name","kind":1024,"kindString":"Property","type":{"type":"intrinsic","name":"string"}},{"name":"type","kind":1024,"kindString":"Property","type":{"type":"reference","name":"ContainerType"}}]}}},{"name":"ContainerQuery","kind":4194304,"kindString":"Type alias","comment":{"shortText":"Used to query native contact containers.","tags":[{"tag":"platform","text":"ios\n"}]},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"contactId","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Query all the containers that parent a contact."},"type":{"type":"intrinsic","name":"string"}},{"name":"containerId","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Query all the containers that matches ID or an array od IDs."},"type":{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"array","elementType":{"type":"intrinsic","name":"string"}}]}},{"name":"groupId","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Query all the containers that parent a group."},"type":{"type":"intrinsic","name":"string"}}]}}},{"name":"ContainerType","kind":4194304,"kindString":"Type alias","type":{"type":"union","types":[{"type":"reference","name":"ContainerTypes"},{"type":"template-literal","head":"","tail":[[{"type":"reference","name":"ContainerTypes"},""]]}]}},{"name":"Date","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"day","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Day."},"type":{"type":"intrinsic","name":"number"}},{"name":"format","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Format for the input date."},"type":{"type":"reference","name":"CalendarFormatType"}},{"name":"id","kind":1024,"kindString":"Property","comment":{"shortText":"Unique ID."},"type":{"type":"intrinsic","name":"string"}},{"name":"label","kind":1024,"kindString":"Property","comment":{"shortText":"Localized display name."},"type":{"type":"intrinsic","name":"string"}},{"name":"month","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Month - adjusted for JavaScript `Date` which starts at `0`."},"type":{"type":"intrinsic","name":"number"}},{"name":"year","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Year."},"type":{"type":"intrinsic","name":"number"}}]}}},{"name":"Email","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"email","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Email address."},"type":{"type":"intrinsic","name":"string"}},{"name":"id","kind":1024,"kindString":"Property","comment":{"shortText":"Unique ID."},"type":{"type":"intrinsic","name":"string"}},{"name":"isPrimary","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Flag signifying if it is a primary email address."},"type":{"type":"intrinsic","name":"boolean"}},{"name":"label","kind":1024,"kindString":"Property","comment":{"shortText":"Localized display name."},"type":{"type":"intrinsic","name":"string"}}]}}},{"name":"FieldType","kind":4194304,"kindString":"Type alias","type":{"type":"union","types":[{"type":"reference","name":"Fields"},{"type":"template-literal","head":"","tail":[[{"type":"reference","name":"Fields"},""]]}]}},{"name":"FormOptions","kind":4194304,"kindString":"Type alias","comment":{"shortText":"Denotes the functionality of a native contact form."},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"allowsActions","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Actions like share, add, create."},"type":{"type":"intrinsic","name":"boolean"}},{"name":"allowsEditing","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Allows for contact mutation."},"type":{"type":"intrinsic","name":"boolean"}},{"name":"alternateName","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Used if contact doesn't have a name defined."},"type":{"type":"intrinsic","name":"string"}},{"name":"cancelButtonTitle","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"The name of the left bar button."},"type":{"type":"intrinsic","name":"string"}},{"name":"displayedPropertyKeys","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"The properties that will be displayed. On iOS those properties does nothing while in editing mode."},"type":{"type":"array","elementType":{"type":"reference","name":"FieldType"}}},{"name":"groupId","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"The parent group for a new contact."},"type":{"type":"intrinsic","name":"string"}},{"name":"isNew","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Present the new contact controller. If set to `false` the unknown controller will be shown."},"type":{"type":"intrinsic","name":"boolean"}},{"name":"message","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Controller title."},"type":{"type":"intrinsic","name":"string"}},{"name":"preventAnimation","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Prevents the controller from animating in."},"type":{"type":"intrinsic","name":"boolean"}},{"name":"shouldShowLinkedContacts","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Show or hide the similar contacts."},"type":{"type":"intrinsic","name":"boolean"}}]}}},{"name":"Group","kind":4194304,"kindString":"Type alias","comment":{"shortText":"A parent to contacts. A contact can belong to multiple groups. Here are some query operations you can perform:\n- Child Contacts: `getContactsAsync({ groupId })`\n- Groups From Container: `getGroupsAsync({ containerId })`\n- Groups Named: `getContainersAsync({ groupName })`","tags":[{"tag":"platform","text":"ios\n"}]},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"id","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"The editable name of a group."},"type":{"type":"intrinsic","name":"string"}},{"name":"name","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Immutable id representing the group."},"type":{"type":"intrinsic","name":"string"}}]}}},{"name":"GroupQuery","kind":4194304,"kindString":"Type alias","comment":{"shortText":"Used to query native contact groups.","tags":[{"tag":"platform","text":"ios\n"}]},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"containerId","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Query all groups that belong to a certain container."},"type":{"type":"intrinsic","name":"string"}},{"name":"groupId","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Query the group with a matching ID."},"type":{"type":"intrinsic","name":"string"}},{"name":"groupName","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Query all groups matching a name."},"type":{"type":"intrinsic","name":"string"}}]}}},{"name":"Image","kind":4194304,"kindString":"Type alias","comment":{"shortText":"Information regarding thumbnail images.\n> On Android you can get dimensions using [`Image.getSize`](https://reactnative.dev/docs/image#getsize) method."},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"base64","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Image as Base64 string."},"type":{"type":"intrinsic","name":"string"}},{"name":"height","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Image height","tags":[{"tag":"platform","text":"ios\n"}]},"type":{"type":"intrinsic","name":"number"}},{"name":"uri","kind":1024,"kindString":"Property","flags":{"isOptional":true},"type":{"type":"intrinsic","name":"string"}},{"name":"width","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Image width.","tags":[{"tag":"platform","text":"ios\n"}]},"type":{"type":"intrinsic","name":"number"}}]}}},{"name":"InstantMessageAddress","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"id","kind":1024,"kindString":"Property","comment":{"shortText":"Unique ID."},"type":{"type":"intrinsic","name":"string"}},{"name":"label","kind":1024,"kindString":"Property","comment":{"shortText":"Localized display name."},"type":{"type":"intrinsic","name":"string"}},{"name":"localizedService","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Localized name of app."},"type":{"type":"intrinsic","name":"string"}},{"name":"service","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Name of instant messaging app."},"type":{"type":"intrinsic","name":"string"}},{"name":"username","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Username in IM app."},"type":{"type":"intrinsic","name":"string"}}]}}},{"name":"PhoneNumber","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"countryCode","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Country code.","tags":[{"tag":"example","text":"`+1`\n"}]},"type":{"type":"intrinsic","name":"string"}},{"name":"digits","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Phone number without format.","tags":[{"tag":"example","text":"`8674305`\n"}]},"type":{"type":"intrinsic","name":"string"}},{"name":"id","kind":1024,"kindString":"Property","comment":{"shortText":"Unique ID."},"type":{"type":"intrinsic","name":"string"}},{"name":"isPrimary","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Flag signifying if it is a primary phone number."},"type":{"type":"intrinsic","name":"boolean"}},{"name":"label","kind":1024,"kindString":"Property","comment":{"shortText":"Localized display name."},"type":{"type":"intrinsic","name":"string"}},{"name":"number","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Phone number."},"type":{"type":"intrinsic","name":"string"}}]}}},{"name":"Relationship","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"id","kind":1024,"kindString":"Property","comment":{"shortText":"Unique ID."},"type":{"type":"intrinsic","name":"string"}},{"name":"label","kind":1024,"kindString":"Property","comment":{"shortText":"Localized display name."},"type":{"type":"intrinsic","name":"string"}},{"name":"name","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Name of related contact."},"type":{"type":"intrinsic","name":"string"}}]}}},{"name":"SocialProfile","kind":4194304,"kindString":"Type alias","comment":{"tags":[{"tag":"platform","text":"ios\n"}]},"type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"id","kind":1024,"kindString":"Property","comment":{"shortText":"Unique ID."},"type":{"type":"intrinsic","name":"string"}},{"name":"label","kind":1024,"kindString":"Property","comment":{"shortText":"Localized display name."},"type":{"type":"intrinsic","name":"string"}},{"name":"localizedProfile","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Localized profile name."},"type":{"type":"intrinsic","name":"string"}},{"name":"service","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Name of social app."},"type":{"type":"intrinsic","name":"string"}},{"name":"url","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Web URL."},"type":{"type":"intrinsic","name":"string"}},{"name":"userId","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Username ID in social app."},"type":{"type":"intrinsic","name":"string"}},{"name":"username","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Username in social app."},"type":{"type":"intrinsic","name":"string"}}]}}},{"name":"UrlAddress","kind":4194304,"kindString":"Type alias","type":{"type":"reflection","declaration":{"name":"__type","kind":65536,"kindString":"Type literal","children":[{"name":"id","kind":1024,"kindString":"Property","comment":{"shortText":"Unique ID."},"type":{"type":"intrinsic","name":"string"}},{"name":"label","kind":1024,"kindString":"Property","comment":{"shortText":"Localized display name."},"type":{"type":"intrinsic","name":"string"}},{"name":"url","kind":1024,"kindString":"Property","flags":{"isOptional":true},"comment":{"shortText":"Web URL."},"type":{"type":"intrinsic","name":"string"}}]}}},{"name":"addContactAsync","kind":64,"kindString":"Function","signatures":[{"name":"addContactAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Creates a new contact and adds it to the system.\n> **Note**: For Android users, the Expo Go app does not have the required `WRITE_CONTACTS` permission to write to Contacts.\n> You will need to create a [development build](/development/create-development-builds) and add permission in there manually to use this method.","returns":"A promise that fulfills with ID of the new system contact.","tags":[{"tag":"example","text":"\n```js\nconst contact = {\n  [Contacts.Fields.FirstName]: 'Bird',\n  [Contacts.Fields.LastName]: 'Man',\n  [Contacts.Fields.Company]: 'Young Money',\n};\nconst contactId = await Contacts.addContactAsync(contact);\n```\n"}]},"parameters":[{"name":"contact","kind":32768,"kindString":"Parameter","comment":{"shortText":"A contact with the changes you wish to persist. The `id` parameter will not be used."},"type":{"type":"reference","name":"Contact"}},{"name":"containerId","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"comment":{"shortText":"@tag-ios The container that will parent the contact."},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"addExistingContactToGroupAsync","kind":64,"kindString":"Function","signatures":[{"name":"addExistingContactToGroupAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Add a contact as a member to a group. A contact can be a member of multiple groups.","tags":[{"tag":"example","text":"\n```js\nawait Contacts.addExistingContactToGroupAsync(\n  '665FDBCFAE55-D614-4A15-8DC6-161A368D',\n  '161A368D-D614-4A15-8DC6-665FDBCFAE55'\n);\n```"},{"tag":"platform","text":"ios\n"}]},"parameters":[{"name":"contactId","kind":32768,"kindString":"Parameter","comment":{"shortText":"ID of the contact you want to edit."},"type":{"type":"intrinsic","name":"string"}},{"name":"groupId","kind":32768,"kindString":"Parameter","comment":{"shortText":"ID for the group you want to add membership to."},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"any"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"addExistingGroupToContainerAsync","kind":64,"kindString":"Function","signatures":[{"name":"addExistingGroupToContainerAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Add a group to a container.","tags":[{"tag":"example","text":"\n```js\nawait Contacts.addExistingGroupToContainerAsync(\n  '161A368D-D614-4A15-8DC6-665FDBCFAE55',\n  '665FDBCFAE55-D614-4A15-8DC6-161A368D'\n);\n```"},{"tag":"platform","text":"ios\n"}]},"parameters":[{"name":"groupId","kind":32768,"kindString":"Parameter","comment":{"shortText":"The group you want to target."},"type":{"type":"intrinsic","name":"string"}},{"name":"containerId","kind":32768,"kindString":"Parameter","comment":{"shortText":"The container you want to add membership to."},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"any"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"createGroupAsync","kind":64,"kindString":"Function","signatures":[{"name":"createGroupAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Create a group with a name, and add it to a container. If the container is undefined, the default container will be targeted.","returns":"A promise that fulfills with ID of the new group.","tags":[{"tag":"example","text":"\n```js\nconst groupId = await Contacts.createGroupAsync('Sailor Moon');\n```"},{"tag":"platform","text":"ios\n"}]},"parameters":[{"name":"name","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"comment":{"shortText":"Name of the new group."},"type":{"type":"intrinsic","name":"string"}},{"name":"containerId","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"comment":{"shortText":"The container you to add membership to."},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"getContactByIdAsync","kind":64,"kindString":"Function","signatures":[{"name":"getContactByIdAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Used for gathering precise data about a contact. Returns a contact matching the given `id`.","returns":"A promise that fulfills with `Contact` object with ID matching the input ID, or `undefined` if there is no match.","tags":[{"tag":"example","text":"\n```js\nconst contact = await Contacts.getContactByIdAsync('161A368D-D614-4A15-8DC6-665FDBCFAE55');\nif (contact) {\n  console.log(contact);\n}\n```\n"}]},"parameters":[{"name":"id","kind":32768,"kindString":"Parameter","comment":{"shortText":"The ID of a system contact."},"type":{"type":"intrinsic","name":"string"}},{"name":"fields","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"comment":{"shortText":"If specified, the fields defined will be returned. When skipped, all fields will be returned."},"type":{"type":"array","elementType":{"type":"reference","name":"FieldType"}}}],"type":{"type":"reference","typeArguments":[{"type":"union","types":[{"type":"reference","name":"Contact"},{"type":"intrinsic","name":"undefined"}]}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"getContactsAsync","kind":64,"kindString":"Function","signatures":[{"name":"getContactsAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Return a list of contacts that fit a given criteria. You can get all of the contacts by passing no criteria.","returns":"A promise that fulfills with `ContactResponse` object returned from the query.","tags":[{"tag":"example","text":"\n```js\nconst { data } = await Contacts.getContactsAsync({\n  fields: [Contacts.Fields.Emails],\n});\n\nif (data.length > 0) {\n  const contact = data[0];\n  console.log(contact);\n}\n```\n"}]},"parameters":[{"name":"contactQuery","kind":32768,"kindString":"Parameter","comment":{"shortText":"Object used to query contacts."},"type":{"type":"reference","name":"ContactQuery"},"defaultValue":"{}"}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"ContactResponse"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"getContainersAsync","kind":64,"kindString":"Function","signatures":[{"name":"getContainersAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Query a list of system containers.","returns":"A promise that fulfills with array of containers that fit the query.","tags":[{"tag":"example","text":"\n```js\nconst allContainers = await Contacts.getContainersAsync({\n  contactId: '665FDBCFAE55-D614-4A15-8DC6-161A368D',\n});\n```"},{"tag":"platform","text":"ios\n"}]},"parameters":[{"name":"containerQuery","kind":32768,"kindString":"Parameter","comment":{"shortText":"Information used to gather containers."},"type":{"type":"reference","name":"ContainerQuery"}}],"type":{"type":"reference","typeArguments":[{"type":"array","elementType":{"type":"reference","name":"Container"}}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"getDefaultContainerIdAsync","kind":64,"kindString":"Function","signatures":[{"name":"getDefaultContainerIdAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Get the default container's ID.","returns":"A promise that fulfills with default container ID.","tags":[{"tag":"example","text":"\n```js\nconst containerId = await Contacts.getDefaultContainerIdAsync();\n```"},{"tag":"platform","text":"ios\n"}]},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"getGroupsAsync","kind":64,"kindString":"Function","signatures":[{"name":"getGroupsAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Query and return a list of system groups.","returns":"A promise that fulfills with array of groups that fit the query.","tags":[{"tag":"example","text":"\n```js\nconst groups = await Contacts.getGroupsAsync({ groupName: 'sailor moon' });\nconst allGroups = await Contacts.getGroupsAsync({});\n```"},{"tag":"platform","text":"ios\n"}]},"parameters":[{"name":"groupQuery","kind":32768,"kindString":"Parameter","comment":{"shortText":"Information regarding which groups you want to get."},"type":{"type":"reference","name":"GroupQuery"}}],"type":{"type":"reference","typeArguments":[{"type":"array","elementType":{"type":"reference","name":"Group"}}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"getPagedContactsAsync","kind":64,"kindString":"Function","signatures":[{"name":"getPagedContactsAsync","kind":4096,"kindString":"Call signature","parameters":[{"name":"contactQuery","kind":32768,"kindString":"Parameter","type":{"type":"reference","name":"ContactQuery"},"defaultValue":"{}"}],"type":{"type":"reference","typeArguments":[{"type":"reference","name":"ContactResponse"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"getPermissionsAsync","kind":64,"kindString":"Function","signatures":[{"name":"getPermissionsAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Checks user's permissions for accessing contacts data.","returns":"A promise that resolves to a [PermissionResponse](#permissionresponse) object.\n"},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"PermissionResponse"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"isAvailableAsync","kind":64,"kindString":"Function","signatures":[{"name":"isAvailableAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Returns whether the Contacts API is enabled on the current device. This method does not check the app permissions.","returns":"A promise that fulfills with a `boolean`, indicating whether the Contacts API is available on the current device. It always resolves to `false` on web.\n"},"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"boolean"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"presentFormAsync","kind":64,"kindString":"Function","signatures":[{"name":"presentFormAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Present a native form for manipulating contacts.","tags":[{"tag":"example","text":"\n```js\nawait Contacts.presentFormAsync('161A368D-D614-4A15-8DC6-665FDBCFAE55');\n```\n"}]},"parameters":[{"name":"contactId","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"comment":{"shortText":"The ID of a system contact."},"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"intrinsic","name":"string"}]}},{"name":"contact","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"comment":{"shortText":"A contact with the changes you want to persist."},"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"reference","name":"Contact"}]}},{"name":"formOptions","kind":32768,"kindString":"Parameter","comment":{"shortText":"Options for the native editor."},"type":{"type":"reference","name":"FormOptions"},"defaultValue":"{}"}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"any"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"removeContactAsync","kind":64,"kindString":"Function","signatures":[{"name":"removeContactAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Delete a contact from the system.","tags":[{"tag":"example","text":"\n```js\nawait Contacts.removeContactAsync('161A368D-D614-4A15-8DC6-665FDBCFAE55');\n```"},{"tag":"platform","text":"ios\n"}]},"parameters":[{"name":"contactId","kind":32768,"kindString":"Parameter","comment":{"shortText":"ID of the contact you want to delete."},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"any"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"removeContactFromGroupAsync","kind":64,"kindString":"Function","signatures":[{"name":"removeContactFromGroupAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Remove a contact's membership from a given group. This will not delete the contact.","tags":[{"tag":"example","text":"\n```js\nawait Contacts.removeContactFromGroupAsync(\n  '665FDBCFAE55-D614-4A15-8DC6-161A368D',\n  '161A368D-D614-4A15-8DC6-665FDBCFAE55'\n);\n```"},{"tag":"platform","text":"ios\n"}]},"parameters":[{"name":"contactId","kind":32768,"kindString":"Parameter","comment":{"shortText":"ID of the contact you want to remove."},"type":{"type":"intrinsic","name":"string"}},{"name":"groupId","kind":32768,"kindString":"Parameter","comment":{"shortText":"ID for the group you want to remove membership of."},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"any"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"removeGroupAsync","kind":64,"kindString":"Function","signatures":[{"name":"removeGroupAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Delete a group from the device.","tags":[{"tag":"example","text":"\n```js\nawait Contacts.removeGroupAsync('161A368D-D614-4A15-8DC6-665FDBCFAE55');\n```"},{"tag":"platform","text":"ios\n"}]},"parameters":[{"name":"groupId","kind":32768,"kindString":"Parameter","comment":{"shortText":"ID of the group you want to remove."},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"any"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"requestPermissionsAsync","kind":64,"kindString":"Function","signatures":[{"name":"requestPermissionsAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Asks the user to grant permissions for accessing contacts data.","returns":"A promise that resolves to a [PermissionResponse](#permissionresponse) object.\n"},"type":{"type":"reference","typeArguments":[{"type":"reference","name":"PermissionResponse"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"shareContactAsync","kind":64,"kindString":"Function","signatures":[{"name":"shareContactAsync","kind":4096,"kindString":"Call signature","parameters":[{"name":"contactId","kind":32768,"kindString":"Parameter","type":{"type":"intrinsic","name":"string"}},{"name":"message","kind":32768,"kindString":"Parameter","type":{"type":"intrinsic","name":"string"}},{"name":"shareOptions","kind":32768,"kindString":"Parameter","type":{"type":"intrinsic","name":"object"},"defaultValue":"{}"}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"any"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"updateContactAsync","kind":64,"kindString":"Function","signatures":[{"name":"updateContactAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Mutate the information of an existing contact. Due to an iOS bug, `nonGregorianBirthday` field cannot be modified.\n> **info** On Android, you can use [`presentFormAsync`](#contactspresentformasynccontactid-contact-formoptions) to make edits to contacts.","returns":"A promise that fulfills with ID of the updated system contact if mutation was successful.","tags":[{"tag":"example","text":"\n```js\nconst contact = {\n  id: '161A368D-D614-4A15-8DC6-665FDBCFAE55',\n  [Contacts.Fields.FirstName]: 'Drake',\n  [Contacts.Fields.Company]: 'Young Money',\n};\nawait Contacts.updateContactAsync(contact);\n```"},{"tag":"platform","text":"ios\n"}]},"parameters":[{"name":"contact","kind":32768,"kindString":"Parameter","comment":{"shortText":"A contact object including the wanted changes."},"type":{"type":"reference","name":"Contact"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"string"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"updateGroupNameAsync","kind":64,"kindString":"Function","signatures":[{"name":"updateGroupNameAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Change the name of an existing group.","tags":[{"tag":"example","text":"\n```js\nawait Contacts.updateGroupName('Expo Friends', '161A368D-D614-4A15-8DC6-665FDBCFAE55');\n```"},{"tag":"platform","text":"ios\n"}]},"parameters":[{"name":"groupName","kind":32768,"kindString":"Parameter","comment":{"shortText":"New name for an existing group."},"type":{"type":"intrinsic","name":"string"}},{"name":"groupId","kind":32768,"kindString":"Parameter","comment":{"shortText":"ID of the group you want to edit."},"type":{"type":"intrinsic","name":"string"}}],"type":{"type":"reference","typeArguments":[{"type":"intrinsic","name":"any"}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]},{"name":"writeContactToFileAsync","kind":64,"kindString":"Function","signatures":[{"name":"writeContactToFileAsync","kind":4096,"kindString":"Call signature","comment":{"shortText":"Query a set of contacts and write them to a local URI that can be used for sharing.","returns":"A promise that fulfills with shareable local URI, or `undefined` if there was no match.","tags":[{"tag":"example","text":"\n```js\nconst localUri = await Contacts.writeContactToFileAsync({\n  id: '161A368D-D614-4A15-8DC6-665FDBCFAE55',\n});\nShare.share({ url: localUri, message: 'Call me!' });\n```\n"}]},"parameters":[{"name":"contactQuery","kind":32768,"kindString":"Parameter","comment":{"shortText":"Used to query contact you want to write."},"type":{"type":"reference","name":"ContactQuery"},"defaultValue":"{}"}],"type":{"type":"reference","typeArguments":[{"type":"union","types":[{"type":"intrinsic","name":"string"},{"type":"intrinsic","name":"undefined"}]}],"qualifiedName":"Promise","package":"typescript","name":"Promise"}}]}]}